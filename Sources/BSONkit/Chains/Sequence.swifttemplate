<%# stencil -%>
<% for chain in types.all where chain.name.hasPrefix("Chain") { -%>
extension <%= chain.name %>: Sequence {
    public struct Iterator: IteratorProtocol {
<% for linkNumber in 0..<chain.variables.count { -%>
        var i<%= linkNumber %>: S<%= linkNumber %>.Iterator
<% } -%>

        public mutating func next() -> S0.Element? {
            if let next = i0.next() {
                return next
            }<%_ for linkNumber in 1..<chain.variables.count { -%> else if let next = i<%= linkNumber %>.next() {
                return next
            }<%_ } -%> else {
                return nil
            }
        }
    }

    public func makeIterator() -> Iterator {
        Iterator(
<% for linkNumber in 0..<chain.variables.count - 1 { -%>
            i<%= linkNumber %>: s<%= linkNumber %>.makeIterator(),
<% } -%>
            i<%= chain.variables.count - 1 %>: s<%= chain.variables.count - 1 %>.makeIterator()
        )
    }
}

<% } -%>